== tinychat frontend ==

Please write the frontend for a basic chat application using your favorite JS framework.

Here is some /fixtures/fakedata.json to start you off (you can modify the data, if you wish), and some stub code with basic libraries and icons (you don't have to use them if you don't want to, they're just there as a resource). 

You can use any open source JS/CSS/etc libraries that you like, just either link them using a CDN or include them in the package you send back.

=== Requirements ===

A user should be able to:

    * View previous messages, with the newest message nearest the box where new messages are entered (so, reverse chronological order if you have previous messages appearing below the chatbox, otherwise, chronological order).
    * Write a message.
    * Have the message you wrote appear with the other messages, with your message as the most recent.

The above should work in the latest versions of Firefox and Chrome.

Important: Please write a message to the backend web developer who would be working with you that includes a spec for what data and routes you want for the real version of the app to work. Be detailed about what your app needs. Include this spec with your code when you send it back.

=== Optional possible additional features ===
    * A way to specify your name
    * A way to edit a message you previously sent
    * "Realtime"/checking for new messages from other users
    * Link detection
    * Support for any other browsers/versions (mention which ones you chose to support, and tested)
    * Improvements to look and feel
    * Anything else you think of! (Be sure to point out your additions when you send your code back.)

Note: **please** don't go crazy with the features or edge cases--we don't want this exercise to take too much of your time!

=== How we grade this thing ===

In order of importance:
    * The app runs and does the things listed in the requirements.
    * Readability, extensibility, and elegance of the JS, CSS, and HTML/template code. (Could another developer jump in and add a feature to this app easily?)
    * Communication skills and design thinking evinced by spec for backend developer
    * Coolness/usefulness of additional features, if any